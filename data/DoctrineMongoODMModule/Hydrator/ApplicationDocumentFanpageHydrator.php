<?php

namespace DoctrineMongoODMModule\Hydrator;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class ApplicationDocumentFanpageHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = $value instanceof \MongoId ? (string) $value : $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['pageid'])) {
            $value = $data['pageid'];
            $return = (string) $value;
            $this->class->reflFields['pageid']->setValue($document, $return);
            $hydratedData['pageid'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['pagetype'])) {
            $value = $data['pagetype'];
            $return = (string) $value;
            $this->class->reflFields['pagetype']->setValue($document, $return);
            $hydratedData['pagetype'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['pagename'])) {
            $value = $data['pagename'];
            $return = (string) $value;
            $this->class->reflFields['pagename']->setValue($document, $return);
            $hydratedData['pagename'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['pagedescription'])) {
            $value = $data['pagedescription'];
            $return = (string) $value;
            $this->class->reflFields['pagedescription']->setValue($document, $return);
            $hydratedData['pagedescription'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['userid'])) {
            $value = $data['userid'];
            $return = (string) $value;
            $this->class->reflFields['userid']->setValue($document, $return);
            $hydratedData['userid'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['createdtime'])) {
            $value = $data['createdtime'];
            $return = (string) $value;
            $this->class->reflFields['createdtime']->setValue($document, $return);
            $hydratedData['createdtime'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['pagelongtitude'])) {
            $value = $data['pagelongtitude'];
            $return = (string) $value;
            $this->class->reflFields['pagelongtitude']->setValue($document, $return);
            $hydratedData['pagelongtitude'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['pagelatitude'])) {
            $value = $data['pagelatitude'];
            $return = (string) $value;
            $this->class->reflFields['pagelatitude']->setValue($document, $return);
            $hydratedData['pagelatitude'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['pagemapinfo'])) {
            $value = $data['pagemapinfo'];
            $return = (string) $value;
            $this->class->reflFields['pagemapinfo']->setValue($document, $return);
            $hydratedData['pagemapinfo'] = $return;
        }
        return $hydratedData;
    }
}